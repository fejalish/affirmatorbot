---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:11-alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: affirmatorbot-secrets
              key: postgres_password
        volumeMounts:
          - mountPath: "/docker-entrypoint-initdb.d"
            name: "db-configmap"
      volumes:
      - name: db-configmap
        configMap:
          name: db-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-configmap
  namespace: default
data:
  seed.sql: |
    CREATE TABLE affirmations (
      id serial primary key,
      transaction_id uuid not null,
      affirmation text not null
    );
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: db
spec:
  ports:
  - name: db
    port: 5432
  clusterIP: None
  selector:
    app: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: affirmatorbot
  labels:
    app: affirmatorbot
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: affirmatorbot
  template:
    metadata:
      labels:
        app: affirmatorbot
    spec:
      containers:
      - name: affirmatorbot
        image: fejalish/affirmatorbot:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        # - name: DEBUG
        #   value: "true"
        - name: PGHOST
          value: db
        - name: PGUSER
          value: postgres
        - name: PGDATABASE
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: affirmatorbot-secrets
              key: postgres_password
        - name: SLACK_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: affirmatorbot-secrets
              key: slack_bot_token
---
